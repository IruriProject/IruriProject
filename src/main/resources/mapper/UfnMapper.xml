<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTDMapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.mvc.mapper.UFnMapperInter">

	<!-- 정보 변경 -->
	<update id="updateUser" parameterType="udto">
		update USER set u_hp=#{u_hp}, u_birth=#{u_birth}, u_email=#{u_email},
		u_addr=#{u_addr} where u_id=#{u_id}
	</update>
	
   <update id="updatePw" parameterType="Map">
      update USER set u_pw=#{u_pw}
      where u_id=#{u_id}
   </update>

   <update id="updatePhoto" parameterType="Map">
      update USER set
      u_photo=#{u_photo} where u_id=#{u_id}
   </update>

   <select id="getResume" resultType="rdto" parameterType="String">
      select *
      from RESUME where u_num=#{u_num} and r_presume=1
   </select>
	
	<!-- 작성한 이력서 목록 가져오기 -->
	<select id="getMyResume" resultType="rdto"
		parameterType="String">
		select * from RESUME where u_num=#{u_num} order by r_presume desc
	</select>

	<!-- UserId에 해당하는 RESUME 찾기 -->
	<select id="getResumeByUserId" resultType="rdto" parameterType="String">
    	SELECT * FROM RESUME WHERE u_num = (SELECT u_num FROM USER WHERE u_id = #{u_id})
  	</select>
  	
  	<!-- 쪽지함 리스트 -->
	<select id="getMessageByUserNum" resultType="Map" parameterType="String">
    SELECT *
    FROM MESSAGE
    INNER JOIN ENTERPRISE
    ON MESSAGE.e_num = ENTERPRISE.e_num
    WHERE u_num = #{u_num}
	</select>

	<!-- 이력서 detailpage -->
	<select id="getResumeOfRNum" resultType="rdto"
		parameterType="String">
		select * from RESUME where r_num=#{r_num}
	</select>

	<!-- 열람 -->
	<insert id="insertViewer" parameterType="vdto">
		insert into
		VIEWER(u_num,p_num) values(#{u_num},#{p_num})
	</insert>

	<!-- u_num 중복체크 -->
	<select id="getSearchUnum" parameterType="Map" resultType="int">
		select count(*) from VIEWER where u_num=${u_num} and p_num=#{p_num}
	</select>

	<!-- 탈퇴 -->
	<delete id="deleteUser" parameterType="String">
		delete from USER where
		u_num=#{u_num}
	</delete>

	<!-- 비공개로 설정 -->
	<update id="updatePrivate" parameterType="int">
		update RESUME set
		r_private=1 where r_num=#{r_num}
	</update>

	<!-- 공개로 설정 -->
	<update id="updatePublic" parameterType="int">
		update RESUME set
		r_private=0 where r_num=#{r_num}
	</update>

	<!-- 대표 설정 -->
	<update id="updateMainOn" parameterType="int">
		update RESUME set r_presume=1, r_private=0 where r_num=#{r_num}
	</update>
	
	<!-- 대표 전체해제 -->
	<update id="updateAllOff" parameterType="string">
		update RESUME set r_presume=0 where u_num=#{u_num}
	</update>

	<!-- 대표 해제 -->
	<update id="updateMainOff" parameterType="int">
		update RESUME set
		r_presume=0 where r_num=#{r_num}
	</update>

	<!-- 주소 변경 -->
	<update id="updateUserNoAddr" parameterType="Map">
		update USER set
		u_hp=#{u_hp}, u_birth=#{u_birth}, u_email=#{u_email} where
		u_id=#{u_id}
	</update>

	<!-- 이력서 등록 -->
	<insert id="insertResume" parameterType="rdto">
		insert into RESUME
		values(null, #{u_num}, #{r_title}, #{r_larea},
		#{r_ltask}, #{r_ltype},
		#{r_lperiod}, #{r_lday}, #{r_content}, #{r_presume}, #{r_private},
		now())
	</insert>
	
	<!-- 이력서 수정 -->
	<update id="updateResume" parameterType="rdto">
		update RESUME set r_title=#{r_title}, r_larea=#{r_larea}, r_ltask=#{r_ltask}, r_ltype=#{r_ltype},
		r_lperiod=#{r_lperiod}, r_lday=#{r_lday}, r_content=#{r_content},
		r_private=#{r_private},r_writeday=now() where r_num=#{r_num}
	</update>
	
	<!-- 이력서 삭제 -->
	<delete id="deleteResume" parameterType="String">
		delete from RESUME where r_num=#{r_num}
	</delete>
   
 	<!-- 관심 기업 -->
	<!-- 관심 기업 수 -->
   <select id="countLikeEnterprise" resultType="int"
      parameterType="String">
      select count(h_num) from HEART where u_num=#{u_num}
   </select>
   
   <!-- 마이페이지 관심 기업 수 -->
   <select id="mypageCountLikeEnterprise" resultType="int"
      parameterType="String">
      select count(h_num) from HEART where u_num=#{u_num}
   </select>
   
   <!-- 관심기업 -->
   <select id="getLikeEnterprise" resultType="Map"
      parameterType="String">
      select HEART.*, ENTERPRISE.* from HEART inner join ENTERPRISE on HEART.e_num = ENTERPRISE.e_num where HEART.u_num=#{u_num} 
   </select>


   <!-- 좋아요버튼 누르면 데이터 저장됨 -->
   <insert id="insertLikeEnter" parameterType="hdto">
      insert into HEART
      (u_num, e_num) values (#{u_num},#{e_num})
   </insert>

	<!-- 좋아요버튼 다시 누르면 데이터 삭제됨 -->
	<delete id="deleteLikeEnter" parameterType="String">
		delete from HEART where h_num=#{h_num}
	</delete>
	
	<!-- 좋아요 버튼 눌렀는지 확인하는 sql -->
	<select id="checkLikeEnter" resultType="hdto" parameterType="Map">
		select * from HEART where u_num=#{u_num} and e_num=#{e_num}
	</select>
	
	<!-- 마이페이지 관심 기업 리스트 -->
	<select id="getMypageLikeEnter" resultType="edto" parameterType="String">
		 select HEART.*, ENTERPRISE.* from HEART inner join ENTERPRISE on HEART.e_num = ENTERPRISE.e_num where HEART.u_num=#{u_num} order by h_num desc Limit 0,3
	</select>
	
	
	<!-- 관심 공고(스크랩) -->
	<!-- 관심 공고 count -->
	<select id="countScrapPosting" resultType="int" parameterType="String">
		select count(s_num) from SCRAP where u_num=#{u_num}
	</select>

	<!-- 공고 리스트 -->
	 <select id="getScrapPosting" resultType="Map"
      parameterType="String">
      select SCRAP.*, POSTING.*, ENTERPRISE.* from SCRAP  
      inner join POSTING on SCRAP.p_num = POSTING.p_num 
      inner join ENTERPRISE on ENTERPRISE.e_num= POSTING.e_num
      where SCRAP.u_num=#{u_num} 
   </select>

	<!-- 스크랩버튼 누르면 데이터 저장됨 -->
	<insert id="insertScrapPosting" parameterType="sdto">
		insert into SCRAP (u_num, p_num) values (#{u_num},#{p_num})
	</insert>

	<!-- 스크랩버튼 다시 누르면 데이터 삭제됨 -->
	<delete id="deleteScrapPosting" parameterType="String">
		delete from SCRAP where s_num=#{s_num}
	</delete>
	
	<!-- 스크랩 버튼 눌렀는지 확인하는 sql -->
	<select id="checkScrapPosting" resultType="sdto" parameterType="Map">
		select * from SCRAP where u_num=#{u_num} and p_num=#{p_num}
	</select>
	
	<!-- 마이페이지 관심 공고 리스트 -->
	<select id="getMypageScrapPosting" resultType="Map"
      parameterType="String">
      select SCRAP.*, POSTING.*, ENTERPRISE.* from SCRAP  
      inner join POSTING on SCRAP.p_num = POSTING.p_num 
      inner join ENTERPRISE on ENTERPRISE.e_num= POSTING.e_num
      where SCRAP.u_num=#{u_num} order by s_num desc Limit 0,3
   </select>
   
   <!-- 지원 현황 -->
    
   <!-- 지원 취소 delete -->
   <delete id="deleteApply" parameterType="String">
   		delete from APPLICANT where a_num=#{a_num}
   </delete>
   
   <!-- 지원현황 리스트 출력 -->
   <select id="getApplicantList" resultType="Map" parameterType="String">
   	select RESUME.*, APPLICANT.*, POSTING.* from APPLICANT
   	inner join POSTING on APPLICANT.p_num = POSTING.p_num 
    inner join RESUME on RESUME.r_num= APPLICANT.r_num
    where RESUME.u_num=#{u_num} 
   </select>
   
   

</mapper>