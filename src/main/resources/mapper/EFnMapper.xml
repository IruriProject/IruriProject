<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTDMapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.mvc.mapper.EFnMapperInter">
	
	<!--인기업로드 포스팅4개 -->
<!-- 	<select id="bestPosting" resultType="adto">
		select * from (
	    select APPLICANT.p_num, count(*) AS num_count from APPLICANT
	    inner join POSTING on APPLICANT.p_num = POSTING.p_num
	  	group by APPLICANT.p_num order by num_count DESC
	    limit 4 ) as subquery
	    inner join POSTING on subquery.p_num = POSTING.p_num;
	</select> -->
	
	
	<select id="bestPosting" resultType="adto">
	  SELECT *
	  FROM (
	    SELECT APPLICANT.p_num, COUNT(*) AS num_count
	    FROM APPLICANT
	    INNER JOIN POSTING ON APPLICANT.p_num = POSTING.p_num
	    GROUP BY APPLICANT.p_num
	    ORDER BY num_count DESC
	    LIMIT 4
	  ) AS subquery
	  INNER JOIN POSTING ON subquery.p_num = POSTING.p_num
	  INNER JOIN ENTERPRISE ON POSTING.e_num = ENTERPRISE.e_num;
</select>
	
	
	
	<!--최근업로드 포스팅8개 -->
	<select id="recentPosting" resultType="pdto">
		select * from POSTING order by p_writeday desc limit 8;
	</select>
		
	
	<!-- 디테일페이지 출력용(enter 조인) -->
	<select id="getPosting" parameterType="String" resultType="Map">
		select POSTING.*, ENTERPRISE.* from POSTING inner join ENTERPRISE on POSTING.e_num = ENTERPRISE.e_num where POSTING.p_num = #{p_num}
	</select>
	
	<!-- 분포도 -->
	<select id="applicantByPosting" parameterType="String" resultType="Map">
		SELECT a.*,u.* FROM APPLICANT AS a JOIN RESUME AS r ON a.r_num = r.r_num JOIN USER AS u ON r.u_num = u.u_num WHERE a.p_num=#{p_num};
	</select>
	
	<!-- 공고별 스크랩 수 -->
	<select id="scrapByPosting" parameterType="String" resultType="int">
		select count(*) from SCRAP where p_num=#{p_num}
	</select>
	
	<!-- 공고별 스크랩한 유저 -->
	<select id="scrapUserByPosting" parameterType="Map" resultType="Map">
		SELECT POSTING.*, SCRAP.*, USER.*, RESUME.* FROM SCRAP
		JOIN USER ON SCRAP.u_num = USER.u_num
		JOIN POSTING ON SCRAP.p_num = POSTING.p_num
		left join RESUME on SCRAP.u_num = RESUME.u_num and RESUME.r_presume = 1
		WHERE SCRAP.p_num = #{p_num}
		order by s_num desc limit #{start},#{perpage}
	</select>
	
	<!-- 공고별 열람 수 -->
	<select id="viewerByPosting" parameterType="String" resultType="int">
		select count(*) from VIEWER where p_num=#{p_num}
	</select>
	
	<!-- 공고별 열람한 유저 -->
	<select id="viewerUserByPosting" parameterType="Map" resultType="Map">
		SELECT POSTING.*, VIEWER.*, USER.*, RESUME.* FROM VIEWER
		JOIN USER ON VIEWER.u_num = USER.u_num
		JOIN POSTING ON VIEWER.p_num = POSTING.p_num
		left join RESUME on VIEWER.u_num = RESUME.u_num and RESUME.r_presume = 1
		WHERE VIEWER.p_num = #{p_num}
		order by v_num desc limit #{start},#{perpage}
	</select>
	
	<!-- 최근 공고 불러오기 -->
	<select id="loadingRecentPosting" parameterType="String" resultType="pdto">
		SELECT * FROM POSTING 
		WHERE e_num = #{e_num} AND p_published = true 
		ORDER BY p_num DESC 
		LIMIT 1
	</select>

	<!-- 공고 -->
 	<select id="getTotalCount" resultType="int">
	select count(*) from POSTING
	</select> 
	
	<select id="getsearchTotalCount" resultType="int" parameterType="Map">
	select count(*) from POSTING
		<if test="allkeyword!=null">
		where p_title like concat('%',#{allkeyword},'%')
		</if>
	</select> 
	
	<!-- search page 공고 리스트 불러오기 -->
	<select id="getPagingList" parameterType="Map" resultType="Map">
	select POSTING.*, ENTERPRISE.* from POSTING 
	inner join ENTERPRISE on POSTING.e_num = ENTERPRISE.e_num where p_published = true
		<if test="searchcolumn!=null and searchword!=null">
		and ${searchcolumn} like concat('%',#{searchword},'%')
		</if>
			order by p_num desc limit #{start},#{perpage}
	</select>
	
	<select id="getTotalCountOfSearch" parameterType="Map" resultType="int">
	select count(*) from POSTING where p_published = true
		<if test="searchcolumn!=null and searchword!=null">
		and ${searchcolumn} like concat('%',#{searchword},'%')
		</if>
	</select>

	<!-- 헤더 검색 -->
	<select id="getSearchList" parameterType="Map" resultType="pdto">
		select * from POSTING
		<if test="allkeyword!=null">
			where p_title like concat('%',#{allkeyword},'%')
		</if>
		
		<if test="sort=='p_writeday'">
			order by p_writeday desc
		</if>
		<if test="sort=='p_pay'">
			order by p_pay desc
		</if>

		limit #{start},#{perpage}
	</select>
	
	<select id="autoSearchTitle" parameterType="String" resultType="pdto">
	select * from POSTING 
	where p_title like concat('%',#{allkeyword},'%')
	</select>

	
	<!-- 공고 insert -->
	<insert id="insertPosting" parameterType="pdto">
		insert into POSTING(e_num,p_title,p_type,p_pay,p_period,p_workday,p_starttime,p_endtime,p_employtype,p_content,p_writeday,p_startdate,p_enddate,p_status,p_hirenum,p_addr)
		 values(#{e_num},#{p_title},#{p_type},#{p_pay},#{p_period},#{p_workday},#{p_starttime},#{p_endtime},#{p_employtype},#{p_content},now(),now(),#{p_enddate},'지원가능',#{p_hirenum},#{p_addr})
	</insert>
	
	<!-- 공고 임시저장 -->
	<insert id="draftPosting" parameterType="pdto">
		insert into POSTING(e_num,p_title,p_type,p_pay,p_period,p_workday,p_starttime,p_endtime,p_employtype,p_content,p_writeday,p_startdate,p_enddate,p_status,p_hirenum,p_published)
		 values(#{e_num},#{p_title},#{p_type},#{p_pay},#{p_period},#{p_workday},#{p_starttime},#{p_endtime},#{p_employtype},#{p_content},now(),now(),#{p_enddate},'지원가능',#{p_hirenum},false)
	</insert>
	
	<!-- 임시저장글 불러오기 -->
	<select id="draftList" parameterType="String" resultType="pdto">
		select * from POSTING where e_num=#{e_num} and p_published=false
	</select>
	
	<!-- 이미 있는 공고인지 확인용(임시저장 글 저장 시) -->
	<select id="findPostingNum" parameterType="String" resultType="int">
		select count(*) from POSTING where p_num=#{p_num}
	</select>
	
	<select id="getAllPostings" parameterType="String" resultType="pdto">
		select * from POSTING where e_num=#{e_num} and p_published=true order by p_num desc
	</select>
	
	<!-- 기업별 공고 페이징 검색 추가 -->
	<select id="getAllPostingsWithPagingSearch" parameterType="Map" resultType="pdto">
	select * from POSTING where e_num=#{e_num} and p_published=true
		<if test="searchcolumn!=null and searchword!=null">
			 and ${searchcolumn} like concat('%',#{searchword},'%')
		</if>
		order by p_status asc, p_enddate desc limit #{start},#{perpage}
	</select>
	
	<select id="getPostingSearchCountWithPagingSearch" parameterType="Map" resultType="int">
	select count(*) from POSTING where e_num=#{e_num} and p_published=true
		<if test="searchcolumn!=null and searchword!=null">
		and ${searchcolumn} like concat('%',#{searchword},'%')
		</if>
	</select>
	
	<select id="getPreviewPostings" parameterType="String" resultType="pdto">
		select * from POSTING where e_num=#{e_num} and p_published=true order by p_status asc, p_enddate desc limit 0,3
	</select>
	
	
	<!-- 공고상태 변경(수동) -->
	<update id="updatePostingStatus" parameterType="Map">
		update POSTING set p_status=#{p_status} where p_num=#{p_num}
	</update>
	
	<!-- 공고상태 변경(자동) -->
	<update id="updatePostingStatusAuto" parameterType="String">
		update POSTING set p_status="지원마감" where p_num=#{p_num}
	</update>
	
	<!-- 모든 공고 -->
	<select id="getAllPostingsAllEnter" resultType="pdto">
		select * from POSTING where p_published=true
	</select>
	
	<!-- 지역별 검색 -->
	<select id="getAddrPostings" parameterType="Map" resultType="pdto">
	select * from POSTING where p_published=true and p_addr like CONCAT('%', #{p_addr}, '%')
	order by p_num desc
	</select>
	
	<delete id="deletePosting" parameterType="String">
		delete from POSTING where p_num=#{p_num}
	</delete>
	<update id="updatePosting" parameterType="pdto">
		update POSTING set p_title=#{p_title},p_type=#{p_type},p_pay=#{p_pay},p_period=#{p_period},p_workday=#{p_workday},p_starttime=#{p_starttime},p_endtime=#{p_endtime},p_employtype=#{p_employtype},p_content=#{p_content},p_enddate=#{p_enddate},p_hirenum=#{p_hirenum} where p_num=#{p_num}
	</update>
	
	<!-- 공고 끌어올리기 -->
	<update id="reposting" parameterType="String">
	UPDATE POSTING JOIN (SELECT MAX(p_num) AS max_num, DATE_ADD(NOW(), INTERVAL 7 DAY) AS new_p_enddate FROM POSTING) AS subquery
	SET POSTING.p_num = subquery.max_num + 1, POSTING.p_enddate = subquery.new_p_enddate, POSTING.p_writeday=now()
	WHERE POSTING.p_num = #{p_num}
	</update>
	
	<select id="getMaxNumOfPosting" resultType="int">
	select max(p_num) from POSTING
	</select>
	
	<!-- 쪽지 -->
	<select id="getAllMessages" parameterType="String" resultType="Map">
		select MESSAGE.*, USER.* from MESSAGE inner join USER on MESSAGE.u_num = USER.u_num where e_num=#{e_num} order by m_num desc
	</select>
	
	<select id="getPreviewMessages" parameterType="String" resultType="Map">
		select MESSAGE.*, USER.* from MESSAGE inner join USER on MESSAGE.u_num = USER.u_num where e_num=#{e_num} order by m_num desc limit 0,3
	</select>
	
	<!-- 기업별 쪽지 페이징 검색 이력서 확인 추가 -->	
	<select id="getAllMessageWithPagingSearch" parameterType="Map" resultType="Map">
		  select MESSAGE.*, USER.*, RESUME.*
		  from MESSAGE
		  inner join USER on MESSAGE.u_num = USER.u_num
		  left join RESUME on MESSAGE.u_num = RESUME.u_num and RESUME.r_presume = 1
		  where MESSAGE.e_num = #{e_num}
		  <if test="searchcolumn != null and searchword != null">
		    and ${searchcolumn} like concat('%', #{searchword}, '%')
		  </if>
		  order by MESSAGE.m_num desc
		  limit #{start}, #{perpage}
	</select>
	
	<select id="getMessageSearchCountWithPagingSearch" parameterType="Map" resultType="int">
		select count(*) from MESSAGE inner join USER on MESSAGE.u_num = USER.u_num where e_num=#{e_num}
		<if test="searchcolumn!=null and searchword!=null">
		and ${searchcolumn} like concat('%',#{searchword},'%')
		</if>
	</select>
	
	
	<insert id="insertMessage" parameterType="mdto">
		insert into MESSAGE(e_num,u_num,m_content,m_day) values(#{e_num},#{u_num},#{m_content},now())
	</insert>
	
	<!-- 동일 인재에게 쪽지 보내는지 확인 -->
	<select id="duplicateUserOfMessage" parameterType="Map" resultType="int">
		select count(*) from MESSAGE where u_num=#{u_num} and e_num=#{e_num}
	</select>
	
	<select id="getEnumOfPosting" parameterType="String" resultType="String">
	select e_num from POSTING where p_num=#{p_num}
	</select>

</mapper>